let t;function e(){for(layout in L.GeoJSON.include({setFilter:function(t,e){return this.options.filter=e,this.clearLayers(),this.addData(t),this}}),t=L.map("map",{center:[51.65892,6.41601],zoom:5,scrollWheelZoom:!1,zoomControl:!1}),L.control.zoom({position:"topright"}).addTo(t),t.layout={items:{light:{layer:L.tileLayer("https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png",{attribution:'&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>, &copy; <a href="https://carto.com/attribution">CARTO</a>, <a href="http://prtr.ec.europa.eu">E-PRTR</a>'}),button:document.getElementById("map-layout-light")},green:{layer:L.tileLayer("https://tile.thunderforest.com/neighbourhood/{z}/{x}/{y}.png?apikey=9a85f60a13be4bf7bed59b5ffc0f4d86",{attribution:'Maps &copy; <a href="https://www.thunderforest.com">Thunderforest</a>, Data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap contributors</a>, <a href="http://prtr.ec.europa.eu">E-PRTR</a>'}).addTo(t),button:document.getElementById("map-layout-green")}},toggle:function(){for(layout in t.layout.items){let e=t.layout.items[layout];e.button.classList.toggle("is-info"),e.button.classList.contains("is-info")?t.addLayer(e.layer):t.removeLayer(e.layer)}}},t.layout.items)t.layout.items[layout].button.addEventListener("click",t.layout.toggle);for(filter in t.sidebar=L.control.sidebar("sidebar",{position:"left"}).addTo(t),t.on("focus",()=>{t.scrollWheelZoom.enable()}),t.on("blur",()=>{t.scrollWheelZoom.disable()}),t.filters={items:{eoAvailability:{button:document.getElementById("filter-by-eo"),filterFunction:t=>"1"==t.properties.hasEthyleneOxide,activeOnLoad:!0},left:{button:document.getElementById("filter-by-geo"),filterFunction:t=>t.geometry.coordinates[0]<=0,activeOnLoad:!1}},createFilterFunction:function(e,o){return function(){o.button.classList.toggle("is-info"),o.button.classList.contains("is-info")?t.filters.filterConditions[e]=o.filterFunction:delete t.filters.filterConditions[e],t.filters.filter()}},filterConditions:{},filter:function(e){t.geoJSONlayer.setFilter(t.data,(function(e){let o=!0;for(condition in t.filters.filterConditions)o=o&&t.filters.filterConditions[condition](e);return o}))}},t.filters.items){let e=t.filters.items[filter];e.button.addEventListener("click",t.filters.createFilterFunction(filter,e)),e.activeOnLoad?(e.button.classList.add("is-info"),t.filters.filterConditions[filter]=e.filterFunction):e.button.classList.remove("is-info")}}function o(e){t.data=e,t.geoJSONlayer=L.geoJson(e,{pointToLayer:function(t,e){return L.circleMarker(e,{radius:30,color:t.properties.color,fillColor:t.properties.color,weight:1,opacity:.7,fillOpacity:.4}).bindPopup(i(t))}}).addTo(t),t.filters.filter()}function i(t){return`<h2>${t.properties.FacilityName}</h2>\n        ${t.properties.CountryName}`}document.addEventListener("DOMContentLoaded",t=>{e(),fetch("data.json").then(t=>t.json(),t=>{console.error(t)}).then(o)});