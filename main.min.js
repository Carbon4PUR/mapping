function showMap(){L.GeoJSON.include({setFilter:function(t,e){return this.options.filter=e,this.clearLayers(),this.addData(t),this}}),map=L.map("map",{center:[51.65892,6.41601],zoom:5,scrollWheelZoom:!1,zoomControl:!1}),L.control.zoom({position:"topright"}).addTo(map);L.tileLayer("https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png",{attribution:'&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>, &copy; <a href="https://carto.com/attribution">CARTO</a>, <a href="http://prtr.ec.europa.eu">E-PRTR</a>'}),L.tileLayer("https://tile.thunderforest.com/neighbourhood/{z}/{x}/{y}.png?apikey=9a85f60a13be4bf7bed59b5ffc0f4d86",{attribution:'Maps &copy; <a href="https://www.thunderforest.com">Thunderforest</a>, Data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap contributors</a>, <a href="http://prtr.ec.europa.eu">E-PRTR</a>'}).addTo(map);L.control.sidebar("sidebar",{position:"left"}).addTo(map);map.on("focus",()=>{map.scrollWheelZoom.enable()}),map.on("blur",()=>{map.scrollWheelZoom.disable()})}function loadGlobalDefs(){format2Dec=d3.format(",.2f"),formatSI=d3.format(",.3f")}function resetFilters(){if(compatFilterButtons[1].click(),pollutantFilterCOButton.classList.contains("is-activated")||returnTogglePollutantFilter(pollutantFilterCOButton)(),pollutantFilterCO2Button.classList.contains("is-activated")||returnTogglePollutantFilter(pollutantFilterCO2Button)(),distanceChemicalPlantSlider.value=25,polyolFilterButton.classList.contains("is-info")&&togglePolyolFilter(),radiusFilterButton.classList.contains("is-info")&&toggleRadiusFilter(),sizeFilterButton.classList.contains("is-info")&&toggleSizeFilter(),polyolSlider.value=5,polyolOutput.value=5,document.createEvent){var t=document.createEvent("Event");t.initEvent("input"),distanceChemicalPlantSlider.dispatchEvent(t)}}function toggleCompatFilter(t){if(activateCompatButton(t.target),t.target==compatFilterCatButton)for(name in nace)nace[name].active=nace[name].catalytic;else if(t.target==compatFilterLoopButton)for(name in nace)nace[name].active=nace[name].looping;updateNaceButtons(),updateEmissionsFilter()}function activateCompatButton(t){for(var e=0;e<compatFilterButtons.length;e++)compatFilterButtons[e].classList.remove("is-info");t.classList.add("is-info")}function updateNaceButtons(){for(var t=0;t<naceButtons.length;t++){let e=naceButtons[t].id.replace("-filter-button","");nace[e].active?naceButtons[t].classList.add("is-activated",nace[e].style):naceButtons[t].classList.remove("is-activated",nace[e].style)}}function returnTogglePollutantFilter(t){return function(){t.classList.toggle("is-activated"),t.classList.contains("is-activated")?t.style.background=emissionColors[t.id.includes("CO2")?"CO2, AIR":"CO, AIR"]:t.style.background="#fff",getFilteredTotals(),toggleFilterEmittersByPollutant(t.id.includes("CO2")?"CO2, AIR":"CO, AIR")}}function toggleFilterEmittersByPollutant(t){map.hasLayer(markers[t])?map.removeLayer(markers[t]):map.addLayer(markers[t])}function getFilteredTotals(){let t=0,e=0,o=0,a=0;for(name in nace)nace[name].active&&(pollutantFilterCOButton.classList.contains("is-activated")&&(e+=globalEmissionData.stats.totals["CO, AIR"][name]),pollutantFilterCO2Button.classList.contains("is-activated")&&(t+=globalEmissionData.stats.totals["CO2, AIR"][name]));for(f in globalEmissionData["CO, AIR"].features){let t=globalEmissionData["CO, AIR"].features[f].properties;pollutantFilterCOButton.classList.contains("is-activated")&&pollutantFilterCO2Button.classList.contains("is-activated")&&nace[t.NACEMainEconomicActivityName].active&&t.co2Amount&&t.co2Amount>0&&(o+=t.co2Amount,a+=t.MTonnes)}co2CombinedFilteredSumOutput.style.background="#ddc",coCombinedFilteredSumOutput.style.background="#ddc",co2FilteredSumOutput.style.background="#ddc",coFilteredSumOutput.style.background="#ddc",setTimeout(function(){co2FilteredSumOutput.style.background="#fff",coFilteredSumOutput.style.background="#fff",co2CombinedFilteredSumOutput.style.background="#fff",coCombinedFilteredSumOutput.style.background="#fff"},500),co2FilteredSumOutput.textContent=formatSI(t)+" MT",coFilteredSumOutput.textContent=formatSI(e)+" MT",co2CombinedFilteredSumOutput.textContent=formatSI(o)+" MT",coCombinedFilteredSumOutput.textContent=formatSI(a)+" MT"}function deselectAllNaceFilter(){for(name in nace)nace[name].active=!1;updateNaceButtons(),updateEmissionsFilter()}function addNACEFilters(){for(var t in nace){let e=formatSI(globalEmissionData.stats.totals["CO2, AIR"][t])+"Mt CO2, "+formatSI(globalEmissionData.stats.totals["CO, AIR"][t])+" Mt CO";d3.select("#naceCategories").append("a").attr("id",t+"-filter-button").attr("class","button is-small is-activated is-fullwidth nace-button "+nace[t].style).on("click",(t,e,o)=>{toggleFilterNACE(o[0].id)}).attr("title",e).text(t)}}function updateEmissionsFilter(){for(marker in markers){var t=markers[marker];t.setFilter(globalEmissionData[marker],function(t){let e=!0;return e=nace[t.properties.NACEMainEconomicActivityName].active,e&&radiusFilterButton.classList.contains("is-info")&&(e=!polyolFilterButton.classList.contains("is-info")&&decideIfInDistance(t,"chemical parks")||decideIfInDistance(t,"polyol plants"),e&&sizeFilterButton.classList.contains("is-info")&&(e=decideIfInVisibleCluster(t))),e})}getFilteredTotals()}function decideIfInVisibleCluster(t){let e=15*polyolOutput.value/5e4;for(d in t.properties.distances)for(paramStyle in t.properties.distances[d]){let o=t.properties.distances[d][paramStyle];if(o<1e3*distanceChemicalPlantOutput.value)for(marker in chemicalParkMarkers)if(!polyolFilterButton.classList.contains("is-info")||"polyol plants"==marker)for(f in chemicalParkMarkers[marker]._layers){let t=chemicalParkMarkers[marker]._layers[f].feature;if(t.properties.FacilityName==paramStyle)return t.properties.availability["CO, AIR"]>e}}return!1}function decideIfInDistance(t,e){let o=99999999;return t.properties.distances&&t.properties.distances[e]&&(o=Math.min(o,Object.entries(t.properties.distances[e]).reduce((t,[,e])=>Math.min(e,t),o))),o<1e3*distanceChemicalPlantOutput.value}function toggleMapLayout(){mapLayoutGreen.classList.toggle("is-info"),mapLayoutLight.classList.toggle("is-info"),mapLayoutGreen.classList.contains("is-info")?(map.removeLayer(light),map.addLayer(green)):(map.removeLayer(green),map.addLayer(light))}function toggleShowConsumers(){if(mapShowConsumers.classList.toggle("is-info"),polyolFilterButton.classList.remove("is-info"),mapShowConsumers.classList.contains("is-info"))for(l in polyolFilterButton.disabled=!1,chemicalParkMarkers)map.addLayer(chemicalParkMarkers[l]);else for(l in polyolFilterButton.disabled=!0,chemicalParkMarkers)map.removeLayer(chemicalParkMarkers[l])}function putCsvInTextArea(t,e){fetch(t).then(t=>t.text()).then(t=>e.value=t)}function toggleModifyConsumers(){modalModifyConsumers.classList.toggle("is-active"),modalModifyConsumers.dataset.isInitialized||(putCsvInTextArea("chemicalparks.csv",csvChemicalParks),putCsvInTextArea("polyol plants europe v2.csv",csvPolyolPlants),modalModifyConsumers.dataset.isInitialized=!0)}function modifyConsumersLink(){var t=document.createElement("script");t.onload=function(){convertCsvsToJSON().then(t=>{var e=LZString.compressToEncodedURIComponent(JSON.stringify(t));window.prompt("Copy to clipboard: Ctrl+C, Enter","https://carbon4pur.github.io/mapping/index.html?c="+e)})},t.src="vendor/lz-string.min.js",document.head.appendChild(t)}function convertCsvsToJSON(){return new Promise(t=>{var e=document.createElement("script");e.onload=function(){let e={"chemical parks":csvChemicalParks.value,"polyol plants":csvPolyolPlants.value},o={};for(type in e)csv2geojson.csv2geojson(e[type],{latfield:"latitude",lonfield:"longitude",delimiter:";"},(t,e)=>{t?console.error(t):o[type]=e});globalChemicalData=o,t(o)},e.src="vendor/csv2geojson.js",document.head.appendChild(e)})}function addDistances(t,e){return new Promise((o,a)=>{for(eCat in t)if("stats"!=eCat)for(f in t[eCat].features){let o=t[eCat].features[f];for(cat in delete o.properties.distances,e)for(park in e[cat].features){let t=e[cat].features[park],a=distance(o.geometry.coordinates[1],o.geometry.coordinates[0],t.geometry.coordinates[1],t.geometry.coordinates[0]);a<100001&&(o.properties.distances||(o.properties.distances={}),o.properties.distances[cat]||(o.properties.distances[cat]={}),o.properties.distances[cat][t.properties.FacilityName]=a)}}globalEmissionData=t,console.log(globalEmissionData),o(t)})}function distance(t,e,o,a){var i=Math.PI/180,n=t*i,l=o*i,s=Math.sin((o-t)*i/2),r=Math.sin((a-e)*i/2),c=s*s+Math.cos(n)*Math.cos(l)*r*r,u=2*Math.atan2(Math.sqrt(c),Math.sqrt(1-c));return 6371e3*u}function loadConsumersData(){modifyConsumersLoadData.classList.add("is-loading"),convertCsvsToJSON().then(t=>addDistances(globalEmissionData,t)).then(t=>loadPRTRlayers()).then(t=>loadChemicalParks(globalChemicalData)).then(()=>{modifyConsumersLoadData.classList.remove("is-loading"),modalModifyConsumers.classList.remove("is-active")})}function loadPRTRlayers(t){return new Promise((e,o)=>{for(emission in t)"stats"!=emission&&(markers[emission]=L.geoJson(t[emission],{pointToLayer:function(e,o){return L.circleMarker(o,{radius:50*Math.sqrt(e.properties.MTonnes/t.stats.totalMax),color:emissionColors[e.properties.PollutantName],fillColor:nace[e.properties.NACEMainEconomicActivityName].color,weight:1,opacity:.7,fillOpacity:.4}).bindPopup(addEmitterPopupHandler(e,emission))}}).addTo(map));globalEmissionData=t,e(t)})}function addEmitterPopupHandler(t,e){if(t.properties){let o="";t.properties.co2Amount&&(o+=formatSI(t.properties.co2Amount)+" Mt CO<sub>2</sub>"),t.properties.coAmount&&(o+=formatSI(t.properties.coAmount)+" Mt CO");let a=translucidColor(nace[t.properties.NACEMainEconomicActivityName].color);return`<h2>${t.properties.FacilityName}</h2>                       \n                        <i>${t.properties.NACEMainEconomicActivityName}</i>\n                        <br>\n                        <div class='popup-em' style='background: ${a}'>\n                        Emissions:\n                        <br />${t.properties.MTonnes} Mt ${"CO, AIR"==e?"CO":"CO<sub>2</sub>"}`+(""!=o?`<br />${o}`:"")+"</div>"}console.log(t)}function loadChemicalParksFromData(t){for(emission in globalEmissionData)if("stats"!=emission)for(f in globalEmissionData[emission].features){let o=globalEmissionData[emission].features[f];if(o.properties.distances)for(e in o.properties.distances)for(chem in o.properties.distances[e])for(paramStyle in t[e].features)t[e].features[paramStyle].properties.FacilityName==chem&&(t[e].features[paramStyle].properties.distances||(t[e].features[paramStyle].properties.distances=[]),t[e].features[paramStyle].properties.distances.push({name:o.properties.FacilityName,distance:o.properties.distances[e][chem],type:emission,value:o.properties.MTonnes}))}for(type in t)"stats"!=type&&(chemicalParkMarkers[type]=convertGeoJSONToChemLayer(t,type).addTo(map));globalChemicalData=t}function loadChemicalParksFromURI(t){loadScript("vendor/lz-string.min.js",()=>{let e=LZString.decompressFromEncodedURIComponent(t);console.log(e,JSON.parse(e)),loadChemicalParksFromData(JSON.parse(e))})}function loadChemicalParks(t){return new Promise((e,o)=>{for(marker in chemicalParkMarkers)map.removeLayer(chemicalParkMarkers[marker]);chemicalParkMarkers={},url.searchParams.get("c")?loadChemicalParksFromURI(url.searchParams.get("c")):loadChemicalParksFromData(t),e(!0)})}function loadChemicalParksFromJSON(){fetch("chemicalParks.json").then(t=>t.json(),t=>{console.error(t)}).then(loadChemicalParks)}function loadScript(t,e){var o=document.head,a=document.createElement("script");a.type="text/javascript",a.src=t,a.onreadystatechange=e,a.onload=e,o.appendChild(a)}function convertGeoJSONToChemLayer(t,e){return L.geoJson(t[e],{pointToLayer:function(t,o){return t.properties.type=e,L.circle(o,1e3*distanceChemicalPlantOutput.value,{fillColor:chemicalColors[t.properties.type],weight:0,fillOpacity:.4}).bindPopup(addConsumerPopupHandler(t,e))}})}function addConsumerPopupHandler(t,e){if(t.properties)return`<h2>${t.properties.FacilityName}</h2>\n                <i class="${e.replace(" ","-")+"-popup"}">${"chemical parks"===e?"Chemical park":"Polyol plant"}</i>\n                <br>`+consumerPopupAvailability(t,e);console.log(t)}function consumerPopupAvailability(t,o){let a=t.properties;if(a.availability={"CO2, AIR":0,"CO, AIR":0},null!=a.distances)for(e in a.distances)a.distances[e].distance<1e3*distanceChemicalPlantOutput.value&&(a.availability[a.distances[e].type]+=a.distances[e].value);return'<div class="popup-em" style="background:'+translucidColor(chemicalColors[o])+'">Available emissions:<br>(in a radius of '+distanceChemicalPlantOutput.value+"&nbsp;km)<br>"+formatSI(t.properties.availability["CO2, AIR"])+"&nbsp;MT CO<sub>2</sub><br>"+formatSI(t.properties.availability["CO, AIR"])+"&nbsp;MT CO</div>"}function translucidColor(t,e=.6){let o=d3.color(t);return o.opacity=e,o}function setCookieNoTour(){setCookie("no-tour","true"),introJs().exit()}function checkIfIntro(){getCookie("no-tour")||startIntro()}function startIntro(){var t=introJs();t.onexit(()=>sidebar.open("info-content")),t.setOptions({steps:[{intro:'Welcome to the Carbon4PUR mapping! If you want, you can follow this short introduction to see the main functions, or you can skip the tour.<br>\n                <button id="set-cookie-no-tour" class="introjs-button" title="This is the only cookie used on this site. If you don\'t want to use cookies, the tour will be shown on each reload. Click anywhere outside the tour to make it disappear."><p>Don\'t show the tour again</p><p style="font-size: x-small; color: #746427;">&#9432; This will set a cookie.</p></button>'},{element:"#sidebar-close-info-span",intro:"This closes the sidebar so you can focus on the map."},{element:"#info-tab-li",intro:"Here you find information about the map and the data"},{element:"#emitter-tab-li",intro:"In this tab, you can filter the bubbles on the map representing emissions."},{element:"#consumer-tab-li",intro:"Here you can filter by chemical parks and polyol plants."},{element:"#legal-tab-li",intro:"All the background info and data as well as legal information about licenses and data."},{element:"#settings-tab-li",intro:"And if you like another map layout or restart the tour, click here."},{intro:"Click on any bubble to see more information about it.<br>That's it, now play with it."}],doneLabel:'<div title="This is the only cookie used on this site. If you don\'t want to use cookies, the tour will be shown on each reload. Click anywhere outside the tour to make it disappear."><span>Done</span><span style="color: #746427;"> &#9432;</span><div>'}),introJs.fn.oncomplete(setCookieNoTour),sidebar.open("info-content"),t.start(),document.getElementById("set-cookie-no-tour").addEventListener("click",setCookieNoTour)}let map,format2Dec,formatSI,globalEmissionData,globalChemicalData,emissionColors={"CO2, AIR":"rgb(241, 177, 48)","CO, AIR":"rgb(234,110,57)"},chemicalColors={"chemical parks":"rgb(0,168,189)","polyol plants":"rgb(12,168,118)"},nace={"Manufacture of basic iron and steel and of ferro-alloys":{style:"nace-iron",color:"#ff0000",looping:!0,catalytic:!0,active:!0},"Manufacture of other inorganic basic chemicals":{style:"nace-inorganic",color:"rgb(214,70,111)",looping:!0,catalytic:!0,active:!0},"Production of electricity":{style:"nace-electricity",color:"rgb(190,85,153)",looping:!0,catalytic:!1,active:!0},"Extraction of natural gas":{style:"nace-ng",color:"rgb(151,133,176)",looping:!0,catalytic:!1,active:!0},"Manufacture of refined petroleum products":{style:"nace-petroleum",color:"rgb(103,155,186)",looping:!0,catalytic:!1,active:!0},"Manufacture of cement":{style:"nace-cement",color:"#5a6067",looping:!0,catalytic:!1,active:!0},"Manufacture of lime and plaster":{style:"nace-lime",color:"#000000",looping:!0,catalytic:!1,active:!0},"Manufacture of fertilisers and nitrogen compounds":{style:"nace-fertilisers",color:"#938e99",looping:!0,catalytic:!1,active:!0}},resetButton=document.getElementById("reset-filters-button");resetButton.addEventListener("click",resetFilters);let compatFilterManualButton=document.getElementById("compat-filter-manual-button"),compatFilterLoopButton=document.getElementById("compat-filter-loop-button");compatFilterCatButton=document.getElementById("compat-filter-cat-button"),compatFilterButtons=[compatFilterManualButton,compatFilterLoopButton,compatFilterCatButton];let pollutantFilterCO2Button=document.getElementById("pollutant-filter-CO2-button"),pollutantFilterCOButton=document.getElementById("pollutant-filter-CO-button"),naceButtons=document.getElementsByClassName("nace-button"),co2FilteredSumOutput=document.getElementById("sumCO2"),coFilteredSumOutput=document.getElementById("sumCO"),co2CombinedFilteredSumOutput=document.getElementById("sumCO2combined"),coCombinedFilteredSumOutput=document.getElementById("sumCOcombined"),naceDeselectButton=document.getElementById("nace-deselect-all");pollutantFilterCO2Button.style.background=emissionColors["CO2, AIR"],pollutantFilterCOButton.style.background=emissionColors["CO, AIR"];for(var i=0;i<compatFilterButtons.length;i++)compatFilterButtons[i].addEventListener("click",toggleCompatFilter);pollutantFilterCO2Button.addEventListener("click",returnTogglePollutantFilter(pollutantFilterCO2Button)),pollutantFilterCOButton.addEventListener("click",returnTogglePollutantFilter(pollutantFilterCOButton)),naceDeselectButton.addEventListener("click",deselectAllNaceFilter);let toggleFilterNACE=t=>{activateCompatButton(compatFilterManualButton),nace[t.replace("-filter-button","")].active=!nace[t.replace("-filter-button","")].active,updateNaceButtons(),updateEmissionsFilter()},distanceChemicalPlant=document.getElementById("distance-chemical-plant"),polyolFilterButton=document.getElementById("polyol-filter-button"),radiusFilterButton=document.getElementById("radius-filter-button"),distanceChemicalPlantSlider=document.getElementById("distance-chemical-plant-slider"),distanceChemicalPlantOutput=document.getElementById("distance-chemical-plant-slider-output"),polyolSlider=document.getElementById("polyol-slider"),polyolOutput=document.getElementById("polyol-slider-output"),sizeFilterButton=document.getElementById("size-filter-button"),togglePolyolFilter=()=>{polyolFilterButton.classList.toggle("is-info"),map.hasLayer(chemicalParkMarkers["chemical parks"])?map.removeLayer(chemicalParkMarkers["chemical parks"]):map.addLayer(chemicalParkMarkers["chemical parks"]),updateEmissionsFilter()};polyolFilterButton.addEventListener("click",togglePolyolFilter);let toggleRadiusFilter=()=>{radiusFilterButton.classList.toggle("is-info"),updateEmissionsFilter()};radiusFilterButton.addEventListener("click",toggleRadiusFilter);let toggleSizeFilter=()=>{sizeFilterButton.classList.toggle("is-info"),sizeFilterButton.classList.contains("is-info")&&radiusFilterButton.classList.add("is-info"),updatePolyolSizeFilter(),updateEmissionsFilter()};sizeFilterButton.addEventListener("click",toggleSizeFilter);let updatePolyolSizeFilter=()=>{let t=sizeFilterButton.classList.contains("is-info"),e=15*polyolOutput.value/5e4;for(marker in chemicalParkMarkers){var o=chemicalParkMarkers[marker];o.setFilter(globalChemicalData[marker],o=>!t||o.properties.availability["CO, AIR"]>e)}};distanceChemicalPlantSlider.value=distanceChemicalPlantSlider.getAttribute("value"),polyolSlider.value=polyolSlider.getAttribute("value"),distanceChemicalPlantSlider.addEventListener("input",function(t){for(layer in distanceChemicalPlantOutput.value=t.target.value,chemicalParkMarkers)chemicalParkMarkers[layer].eachLayer(e=>(e.setPopupContent(addConsumerPopupHandler(e.feature,type)),e.setRadius(1e3*t.target.value)));radiusFilterButton.classList.contains("is-info")&&updateEmissionsFilter()}),polyolSlider.addEventListener("input",function(t){polyolOutput.value=t.target.value,updatePolyolSizeFilter(),updateEmissionsFilter()});let mapLayoutGreen=document.getElementById("map-layout-green"),mapLayoutLight=document.getElementById("map-layout-light"),mapShowConsumers=document.getElementById("map-show-consumers"),modifyConsumers=document.getElementById("modify-consumers"),modalModifyConsumers=document.getElementById("modal-modify-consumers"),csvChemicalParks=document.getElementById("csv-chemical-parks"),csvPolyolPlants=document.getElementById("csv-polyol-plants"),modifyConsumersCreateLink=document.getElementById("modify-consumers-create-link"),modifyConsumersLoadData=document.getElementById("modify-consumers-load-data"),closeModalList=document.getElementsByClassName("close-modal"),resetConsumers=document.getElementById("reset-consumers");mapLayoutGreen.addEventListener("click",toggleMapLayout),mapLayoutLight.addEventListener("click",toggleMapLayout),mapShowConsumers.addEventListener("click",toggleShowConsumers),modifyConsumers.addEventListener("click",toggleModifyConsumers);for(let t=0;t<closeModalList.length;t++)closeModalList[t].addEventListener("click",toggleModifyConsumers);modifyConsumersCreateLink.addEventListener("click",modifyConsumersLink),modifyConsumersLoadData.addEventListener("click",loadConsumersData),resetConsumers.addEventListener("click",()=>{delete modalModifyConsumers.dataset.isInitialized,loadChemicalParksFromJSON()});var markers={},chemicalParkMarkers={};let createScale=()=>{var t=75,e=130,o=d3.select("#scale").append("svg").attr("width",e).attr("height",t),a=d3.scaleSqrt().domain([0,globalEmissionData.stats.totalMax]).range([0,50]),i=[.1,5,20],n=38,l=100,s=74;o.selectAll("legend").data(i).enter().append("circle").attr("cx",n).attr("cy",function(t){return s-a(t)}).attr("r",function(t){return a(t)}).style("fill","none").style("stroke","black").style("stroke-width","0.8").attr("stroke","black"),o.selectAll("legend").data(i).enter().append("line").attr("x1",function(t){return n+a(t)}).attr("x2",l).attr("y1",function(t){return s-a(t)}).attr("y2",function(t){return s-a(t)}).attr("stroke","black").style("stroke","black").style("stroke-width","0.8").style("stroke-dasharray","2,2"),o.selectAll("legend").data(i).enter().append("text").attr("x",function(t){return l+(t>=10?1:7)}).attr("y",function(t){return s-a(t)}).text(function(t){return format2Dec(t)}).style("font-size",10).attr("alignment-baseline","middle")};var url=new URL(window.location.href);mapLayoutLight.classList.contains("is-info")||"light"!=url.searchParams.get("style")||toggleMapLayout(),document.addEventListener("DOMContentLoaded",t=>{showMap(),loadGlobalDefs(),fetch("emissions.json").then(t=>t.json(),t=>{console.error(t)}).then(loadPRTRlayers).then(createScale).then(addNACEFilters).then(getFilteredTotals).then(loadChemicalParksFromJSON).then(checkIfIntro)});const setCookie=(t,e,o=100,a="/")=>{const i=new Date(Date.now()+864e5*o).toUTCString();document.cookie=t+"="+encodeURIComponent(e)+"; expires="+i+"; path="+a},getCookie=t=>document.cookie.split("; ").reduce((e,o)=>{const a=o.split("=");return a[0]===t?decodeURIComponent(a[1]):e},""),deleteCookie=(t,e="/")=>{setCookie(t,"",-1,e)};document.getElementById("show-intro").addEventListener("click",()=>{deleteCookie("no-tour"),startIntro()});