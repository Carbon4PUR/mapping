function _defineProperty(t,e,o){return e in t?Object.defineProperty(t,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[e]=o,t}function _slicedToArray(t,e){return _arrayWithHoles(t)||_iterableToArrayLimit(t,e)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(t,e){var o=[],i=!0,a=!1,n=void 0;try{for(var r,l=t[Symbol.iterator]();!(i=(r=l.next()).done)&&(o.push(r.value),!e||o.length!==e);i=!0);}catch(t){a=!0,n=t}finally{try{i||null==l.return||l.return()}finally{if(a)throw n}}return o}function _arrayWithHoles(t){if(Array.isArray(t))return t}L.GeoJSON.include({setFilter:function(t){return this._geojson||(this._geojson=this.toGeoJSON()),this.options.filter=t,this.clearLayers(),this.addData(this._geojson),this}});var map=L.map("map",{center:[51.65892,6.41601],zoom:5,scrollWheelZoom:!1,zoomControl:!1});L.control.zoom({position:"topright"}).addTo(map);var light=L.tileLayer("https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png",{attribution:'&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>, &copy; <a href="https://carto.com/attribution">CARTO</a>, <a href="http://prtr.ec.europa.eu">E-PRTR</a>'}),green=L.tileLayer("https://tile.thunderforest.com/neighbourhood/{z}/{x}/{y}.png?apikey=9a85f60a13be4bf7bed59b5ffc0f4d86",{attribution:'Maps &copy; <a href="https://www.thunderforest.com">Thunderforest</a>, Data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap contributors</a>, <a href="http://prtr.ec.europa.eu">E-PRTR</a>'}).addTo(map),sidebar=L.control.sidebar("sidebar",{position:"left"}).addTo(map);map.on("focus",function(){map.scrollWheelZoom.enable()}),map.on("blur",function(){map.scrollWheelZoom.disable()});var globalEmissionData,globalChemicalData,formatSI=d3.format(",.2f"),emissionColors={"CO2, AIR":"rgb(241, 177, 48)","CO, AIR":"rgb(234,110,57)"},chemicalColors={"chemical parks":"rgb(0,168,189)","polyol plants":"rgb(12,168,118)"},nace={"Manufacture of basic iron and steel and of ferro-alloys":{style:"nace-iron",color:"#ff0000",looping:!0,catalytic:!0,active:!0},"Manufacture of other inorganic basic chemicals":{style:"nace-inorganic",color:"rgb(214,70,111)",looping:!0,catalytic:!0,active:!0},"Production of electricity":{style:"nace-electricity",color:"rgb(190,85,153)",looping:!0,catalytic:!1,active:!0},"Extraction of natural gas":{style:"nace-ng",color:"rgb(151,133,176)",looping:!0,catalytic:!1,active:!0},"Manufacture of refined petroleum products":{style:"nace-petroleum",color:"rgb(103,155,186)",looping:!0,catalytic:!1,active:!0},"Manufacture of cement":{style:"nace-cement",color:"#5a6067",looping:!0,catalytic:!1,active:!0},"Manufacture of lime and plaster":{style:"nace-lime",color:"#000000",looping:!0,catalytic:!1,active:!0},"Manufacture of fertilisers and nitrogen compounds":{style:"nace-fertilisers",color:"#938e99",looping:!0,catalytic:!1,active:!0}},resetButton=document.getElementById("reset-filters-button");function resetFilters(){if(compatFilterButtons[1].click(),pollutantFilterCOButton.classList.contains("is-activated")||returnTogglePollutantFilter(pollutantFilterCOButton)(),pollutantFilterCO2Button.classList.contains("is-activated")||returnTogglePollutantFilter(pollutantFilterCO2Button)(),distanceChemicalPlantSlider.value=25,polyolFilterButton.classList.contains("is-info")&&togglePolyolFilter(),radiusFilterButton.classList.contains("is-info")&&toggleRadiusFilter(),sizeFilterButton.classList.contains("is-info")&&toggleSizeFilter(),polyolSlider.value=5,polyolOutput.value=5,document.createEvent){var t=document.createEvent("Event");t.initEvent("input"),distanceChemicalPlantSlider.dispatchEvent(t)}}resetButton.addEventListener("click",resetFilters);var compatFilterButtons=[document.getElementById("compat-filter-manual-button"),document.getElementById("compat-filter-loop-button"),document.getElementById("compat-filter-cat-button")],pollutantFilterCO2Button=document.getElementById("pollutant-filter-CO2-button"),pollutantFilterCOButton=document.getElementById("pollutant-filter-CO-button"),naceButtons=document.getElementsByClassName("nace-button"),co2FilteredSumOutput=document.getElementById("sumCO2"),coFilteredSumOutput=document.getElementById("sumCO"),co2CombinedFilteredSumOutput=document.getElementById("sumCO2combined"),coCombinedFilteredSumOutput=document.getElementById("sumCOcombined"),naceDeselectButton=document.getElementById("nace-deselect-all");function toggleCompatFilter(t){for(var e=0;e<compatFilterButtons.length;e++)compatFilterButtons[e].classList.remove("is-info");if(t.target.classList.add("is-info"),"compat-filter-cat-button"==t.target.id)for(name in nace)nace[name].active=nace[name].catalytic;else if("compat-filter-loop-button"==t.target.id)for(name in nace)nace[name].active=nace[name].looping;updateNaceButtons(),updateEmissionsFilter()}pollutantFilterCO2Button.style.background=emissionColors["CO2, AIR"],pollutantFilterCOButton.style.background=emissionColors["CO, AIR"];for(var i=0;i<compatFilterButtons.length;i++)compatFilterButtons[i].addEventListener("click",toggleCompatFilter);function updateNaceButtons(){for(var t=0;t<naceButtons.length;t++){var e=naceButtons[t].id.replace("-filter-button","");nace[e].active?naceButtons[t].classList.add("is-activated",nace[e].style):naceButtons[t].classList.remove("is-activated",nace[e].style)}}function returnTogglePollutantFilter(t){return function(){t.classList.toggle("is-activated"),t.classList.contains("is-activated")?t.style.background=emissionColors[t.id.includes("CO2")?"CO2, AIR":"CO, AIR"]:t.style.background="#fff",getFilteredTotals(),toggleFilterEmittersByPollutant(t.id.includes("CO2")?"CO2, AIR":"CO, AIR")}}function toggleFilterEmittersByPollutant(t){map.hasLayer(markers[t])?map.removeLayer(markers[t]):map.addLayer(markers[t])}function getFilteredTotals(){var t=0,e=0,o=0,i=0;for(name in nace)nace[name].active&&(pollutantFilterCOButton.classList.contains("is-activated")&&(e+=globalEmissionData.stats.totals["CO, AIR"][name]),pollutantFilterCO2Button.classList.contains("is-activated")&&(t+=globalEmissionData.stats.totals["CO2, AIR"][name]));for(f in globalEmissionData["CO, AIR"].features){var a=globalEmissionData["CO, AIR"].features[f].properties;pollutantFilterCOButton.classList.contains("is-activated")&&nace[a.NACEMainEconomicActivityName].active&&a.co2Amount&&a.co2Amount>0&&(o+=a.co2Amount,i+=a.MTonnes)}co2CombinedFilteredSumOutput.style.background="#ddc",coCombinedFilteredSumOutput.style.background="#ddc",co2FilteredSumOutput.style.background="#ddc",coFilteredSumOutput.style.background="#ddc",setTimeout(function(){co2FilteredSumOutput.style.background="#fff",coFilteredSumOutput.style.background="#fff",co2CombinedFilteredSumOutput.style.background="#fff",coCombinedFilteredSumOutput.style.background="#fff"},500),co2FilteredSumOutput.textContent=formatSI(t)+" MT",coFilteredSumOutput.textContent=formatSI(e)+" MT",co2CombinedFilteredSumOutput.textContent=formatSI(o)+" MT",coCombinedFilteredSumOutput.textContent=formatSI(i)+" MT"}function deselectAllNaceFilter(){for(name in nace)nace[name].active=!1;updateNaceButtons(),updateEmissionsFilter()}pollutantFilterCO2Button.addEventListener("click",returnTogglePollutantFilter(pollutantFilterCO2Button)),pollutantFilterCOButton.addEventListener("click",returnTogglePollutantFilter(pollutantFilterCOButton)),naceDeselectButton.addEventListener("click",deselectAllNaceFilter);var toggleFilterNACE=function(t){for(var e=0;e<compatFilterButtons.length;e++)compatFilterButtons[e].classList.remove("is-info");document.getElementById("compat-filter-manual-button").classList.add("is-info"),nace[t.replace("-filter-button","")].active=!nace[t.replace("-filter-button","")].active,updateNaceButtons(),updateEmissionsFilter()};function addNACEFilters(){for(var t in nace){var e=formatSI(globalEmissionData.stats.totals["CO2, AIR"][t])+"Mt CO2, "+formatSI(globalEmissionData.stats.totals["CO, AIR"][t])+" Mt CO";d3.select("#naceCategories").append("a").attr("id",t+"-filter-button").attr("class","button is-small is-activated is-fullwidth nace-button "+nace[t].style).on("click",function(t,e,o){toggleFilterNACE(o[0].id)}).attr("title",e).text(t)}}var distanceChemicalPlant=document.getElementById("distance-chemical-plant"),polyolFilterButton=document.getElementById("polyol-filter-button"),radiusFilterButton=document.getElementById("radius-filter-button"),distanceChemicalPlantSlider=document.getElementById("distance-chemical-plant-slider"),distanceChemicalPlantOutput=document.getElementById("distance-chemical-plant-slider-output"),polyolSlider=document.getElementById("polyol-slider"),polyolOutput=document.getElementById("polyol-slider-output"),sizeFilterButton=document.getElementById("size-filter-button"),togglePolyolFilter=function(){polyolFilterButton.classList.toggle("is-info"),map.hasLayer(chemicalParkMarkers["chemical parks"])?map.removeLayer(chemicalParkMarkers["chemical parks"]):map.addLayer(chemicalParkMarkers["chemical parks"]),updateEmissionsFilter()};function updateEmissionsFilter(){for(marker in markers){markers[marker].setFilter(function(t){var e=!0;return(e=nace[t.properties.NACEMainEconomicActivityName].active)&&radiusFilterButton.classList.contains("is-info")&&(e=!polyolFilterButton.classList.contains("is-info")&&decideIfInDistance(t,"chemical parks")||decideIfInDistance(t,"polyol plants")),e&&sizeFilterButton.classList.contains("is-info")&&(e=decideIfInVisibleCluster(t)),e})}getFilteredTotals()}function decideIfInVisibleCluster(t){var e=15*polyolOutput.value/5e4;if(!polyolFilterButton.classList.contains("is-info"))for(d in t.properties.distances)for(c in t.properties.distances[d]){if(t.properties.distances[d][c]<1e3*distanceChemicalPlantOutput.value)for(marker in chemicalParkMarkers)for(f in chemicalParkMarkers[marker]._geojson.features){var o=chemicalParkMarkers[marker]._geojson.features[f];if(o.properties.FacilityName==c)return o.properties.availability["CO, AIR"]>e}}return!1}function decideIfInDistance(t,e){var o=99999999;return t.properties.distances&&t.properties.distances[e]&&(o=Math.min(o,Object.entries(t.properties.distances[e]).reduce(function(t,e){var o=_slicedToArray(e,2)[1];return Math.min(o,t)},o))),o<1e3*distanceChemicalPlantOutput.value}polyolFilterButton.addEventListener("click",togglePolyolFilter);var toggleRadiusFilter=function(){radiusFilterButton.classList.toggle("is-info"),updateEmissionsFilter()};radiusFilterButton.addEventListener("click",toggleRadiusFilter);var toggleSizeFilter=function(){sizeFilterButton.classList.toggle("is-info"),updatePolyolSizeFilter(),updateEmissionsFilter()};sizeFilterButton.addEventListener("click",toggleSizeFilter);var updatePolyolSizeFilter=function(){var t=sizeFilterButton.classList.contains("is-info"),e=15*polyolOutput.value/5e4;for(marker in chemicalParkMarkers){chemicalParkMarkers[marker].setFilter(function(o){return!t||o.properties.availability["CO, AIR"]>e})}};distanceChemicalPlantSlider.value=distanceChemicalPlantSlider.getAttribute("value"),polyolSlider.value=polyolSlider.getAttribute("value"),distanceChemicalPlantSlider.addEventListener("input",function(t){for(layer in distanceChemicalPlantOutput.value=t.target.value,chemicalParkMarkers)chemicalParkMarkers[layer].eachLayer(function(e){return e.setPopupContent(addConsumerPopupHandler(e.feature,type)),e.setRadius(1e3*t.target.value)});radiusFilterButton.classList.contains("is-info")&&updateEmissionsFilter()}),polyolSlider.addEventListener("input",function(t){polyolOutput.value=t.target.value,updatePolyolSizeFilter()});var mapLayoutGreen=document.getElementById("map-layout-green"),mapLayoutLight=document.getElementById("map-layout-light"),toggleMapLayout=function(){mapLayoutGreen.classList.toggle("is-info"),mapLayoutLight.classList.toggle("is-info"),mapLayoutGreen.classList.contains("is-info")?(map.removeLayer(light),map.addLayer(green)):(map.removeLayer(green),map.addLayer(light))};mapLayoutGreen.addEventListener("click",toggleMapLayout),mapLayoutLight.addEventListener("click",toggleMapLayout);var markers={},chemicalParkMarkers={};function loadPRTRlayers(t){for(emission in t)"stats"!=emission&&(markers[emission]=L.geoJson(t[emission],{pointToLayer:function(e,o){return L.circleMarker(o,{radius:50*Math.sqrt(e.properties.MTonnes/t.stats.totalMax),color:emissionColors[e.properties.PollutantName],fillColor:nace[e.properties.NACEMainEconomicActivityName].color,weight:1,opacity:.7,fillOpacity:.4}).bindPopup(addEmitterPopupHandler(e,emission))}}).addTo(map));globalEmissionData=t}function addEmitterPopupHandler(t,e){if(t.properties){e=e.replace("CO2","CO<sub>2</sub>");var o="";return t.properties.co2Amount&&(o+=t.properties.co2Amount+" Mt CO<sub>2</sub>"),t.properties.coAmount&&(o+=t.properties.coAmount+" Mt CO"),"<h2>".concat(t.properties.FacilityName,"</h2>\n                        <i>").concat(t.properties.NACEMainEconomicActivityName,"</i>\n                        <br />").concat(t.properties.MTonnes," Mt ").concat(e)+(""!=o?"<br />(".concat(o,")"):"")}console.log(t)}var loadChemicalParks=function(t){for(emission in globalEmissionData)if("stats"!=emission)for(f in globalEmissionData[emission].features){var o=globalEmissionData[emission].features[f];if(o.properties.distances)for(e in o.properties.distances)for(chem in o.properties.distances[e])for(c in t[e].features)t[e].features[c].properties.FacilityName==chem&&(t[e].features[c].properties.distances||(t[e].features[c].properties.distances=[]),t[e].features[c].properties.distances.push({name:o.properties.FacilityName,distance:o.properties.distances[e][chem],type:emission,value:o.properties.MTonnes}))}for(type in t)"stats"!=type&&(chemicalParkMarkers[type]=L.geoJson(t[type],{pointToLayer:function(t,e){return L.circle(e,1e3*distanceChemicalPlantOutput.value,{fillColor:chemicalColors[type],weight:0,fillOpacity:.4}).bindPopup(addConsumerPopupHandler(t,type))}}).addTo(map));globalChemicalData=t};function addConsumerPopupHandler(t,e){if(t.properties)return"<h3>".concat(t.properties.FacilityName,'</h3>\n                <i class="').concat(e.replace(" ","-")+"-popup",'">').concat("chemical parks"===e?"Chemical park":"Polyol plant","</i>\n                <br>")+consumerPopupAvailability(t);console.log(t)}function consumerPopupAvailability(t){var o,i=t.properties;if(i.availability=(_defineProperty(o={},"CO2, AIR",0),_defineProperty(o,"CO, AIR",0),o),null!=i.distances)for(e in i.distances)i.distances[e].distance<1e3*distanceChemicalPlantOutput.value&&(i.availability[i.distances[e].type]+=i.distances[e].value);return"Available emissions in "+distanceChemicalPlantOutput.value+"&nbsp;km:<br>CO<sub>2</sub>: "+formatSI(t.properties.availability["CO2, AIR"])+"&nbsp;MT<br>CO: "+formatSI(t.properties.availability["CO, AIR"])+"&nbsp;MT"}var createScale=function(){var t=d3.select("#scale").append("svg").attr("width",130).attr("height",75),e=d3.scaleSqrt().domain([0,globalEmissionData.stats.totalMax]).range([0,50]),o=[.1,5,20];t.selectAll("legend").data(o).enter().append("circle").attr("cx",38).attr("cy",function(t){return 74-e(t)}).attr("r",function(t){return e(t)}).style("fill","none").style("stroke","black").style("stroke-width","0.8").attr("stroke","black"),t.selectAll("legend").data(o).enter().append("line").attr("x1",function(t){return 38+e(t)}).attr("x2",100).attr("y1",function(t){return 74-e(t)}).attr("y2",function(t){return 74-e(t)}).attr("stroke","black").style("stroke","black").style("stroke-width","0.8").style("stroke-dasharray","2,2"),t.selectAll("legend").data(o).enter().append("text").attr("x",function(t){return 100+(t>=10?1:7)}).attr("y",function(t){return 74-e(t)}).text(function(t){return formatSI(t)}).style("font-size",10).attr("alignment-baseline","middle")};document.addEventListener("DOMContentLoaded",function(){fetch("emissions.json").then(function(t){return t.json()},function(t){console.error(t)}).then(loadPRTRlayers).then(createScale).then(addNACEFilters).then(getFilteredTotals).then(function(){return fetch("chemicalParks.json")}).then(function(t){return t.json()},function(t){console.error(t)}).then(loadChemicalParks).then(checkIfIntro)});var setCookie=function(t,e){var o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:100,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"/",a=new Date(Date.now()+864e5*o).toUTCString();document.cookie=t+"="+encodeURIComponent(e)+"; expires="+a+"; path="+i},getCookie=function(t){return document.cookie.split("; ").reduce(function(e,o){var i=o.split("=");return i[0]===t?decodeURIComponent(i[1]):e},"")},deleteCookie=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"/";setCookie(t,"",-1,e)};function setCookieNoTour(){setCookie("no-tour","true"),introJs().exit()}function checkIfIntro(){getCookie("no-tour")||startIntro()}function startIntro(){var t=introJs();t.onexit(function(){return sidebar.open("info-content")}),t.setOptions({steps:[{intro:'Welcome to the Carbon4PUR mapping! If you want, you can follow this short introduction to see the main functions, or you can skip the tour.<br>\n                <button id="set-cookie-no-tour" class="introjs-button" title="This is the only cookie used on this site. If you don\'t want to use cookies, the tour will be shown on each reload. Click anywhere outside the tour to make it disappear."><p>Don\'t show the tour again</p><p style="font-size: x-small; color: #746427;">&#9432; This will set a cookie.</p></button>'},{element:"#sidebar-close-info-span",intro:"This closes the sidebar so you can focus on the map."},{element:"#info-tab-li",intro:"Here you find information about the map and the data"},{element:"#emitter-tab-li",intro:"In this tab, you can filter the bubbles on the map representing emissions.",position:"right"},{element:"#consumer-tab-li",intro:"Here you can filter by chemical parks and polyol plants.",position:"left"},{element:"#settings-tab-li",intro:"And if you like another map layout or restart the tour, click here.",position:"bottom"},{intro:"Click on any bubble to see more information about it.<br>That's it, now play with it."}]}),introJs.fn.oncomplete(setCookieNoTour),sidebar.open("info-content"),t.start(),document.getElementById("set-cookie-no-tour").addEventListener("click",setCookieNoTour)}document.getElementById("show-intro").addEventListener("click",function(){deleteCookie("no-tour"),startIntro()});